# Copyright 2014-2016 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# generated from rmw_implementation/rmw_implementation-extras.cmake.in

find_package(rmw_implementation_cmake REQUIRED)

if(NOT "${RMW_IMPLEMENTATION}" STREQUAL "")
  set(requested_rmw_implementation "${RMW_IMPLEMENTATION}")
  set(requested_rmw_implementation_from "CMake")
elseif(NOT "$ENV{RMW_IMPLEMENTATION}" STREQUAL "")
  set(requested_rmw_implementation "$ENV{RMW_IMPLEMENTATION}")
  set(requested_rmw_implementation_from
    "environment variable 'RMW_IMPLEMENTATION'")
else()
  set(requested_rmw_implementation "@RMW_IMPLEMENTATION@")
  set(requested_rmw_implementation_from
    "the default when @PROJECT_NAME@ was built")
endif()

if(@RMW_IMPLEMENTATION_DISABLE_RUNTIME_SELECTION@)
  message(STATUS "Using RMW implementation '@RMW_IMPLEMENTATION@'")
  if(NOT requested_rmw_implementation STREQUAL "@RMW_IMPLEMENTATION@")
    message(FATAL_ERROR
      "The RMW implementation has been specified as "
      "'${requested_rmw_implementation}' via "
      "${requested_rmw_implementation_from}, but rmw_implementation was built "
      "only with support for '@RMW_IMPLEMENTATION@'.")
  endif()
  find_package("@RMW_IMPLEMENTATION@" REQUIRED)

  # TODO should never need definitions and include dirs?
  list(APPEND rmw_implementation_DEFINITIONS
    ${@RMW_IMPLEMENTATION@_DEFINITIONS})
  list(APPEND rmw_implementation_INCLUDE_DIRS
    ${@RMW_IMPLEMENTATION@_INCLUDE_DIRS})
  list(APPEND rmw_implementation_LIBRARIES
    ${@RMW_IMPLEMENTATION@_LIBRARIES})
else()
  get_available_rmw_implementations(available_rmw_implementations)

  if(NOT requested_rmw_implementation IN_LIST available_rmw_implementations)
    message(FATAL_ERROR
      "The RMW implementation has been specified as "
      "'${requested_rmw_implementation}' via "
      "${requested_rmw_implementation_from}, but it is not available at this "
      "time.\n\nCurrently available middlewares:\n"
      "'${available_rmw_implementations}'")
  endif()
  message(STATUS "Using RMW implementation '${requested_rmw_implementation}' as default")

  # no need to find_package @PROJECT_NAME@
  # since this code is already part of a find_package call of that package
endif()

find_package(Threads REQUIRED)
list(APPEND rmw_implementation_LIBRARIES "${CMAKE_THREAD_LIBS_INIT}")
