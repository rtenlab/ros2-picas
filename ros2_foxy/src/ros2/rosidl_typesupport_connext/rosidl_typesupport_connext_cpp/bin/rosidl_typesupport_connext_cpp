#!/usr/bin/env python3

import argparse
import sys

from rosidl_cmake import read_generator_arguments
from rosidl_typesupport_connext_cpp import generate_cpp
from rosidl_typesupport_connext_cpp import generate_dds_connext_cpp


def main(argv=sys.argv[1:]):
    parser = argparse.ArgumentParser(
        description='Generate the C++ interfaces for Connext.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        '--generator-arguments-file',
        required=True,
        help='The location of the file containing the generator arguments')
    parser.add_argument(
        '--dds-interface-base-path',
        required=True,
        help='The base location of the DDS interface files')
    parser.add_argument(
        '--idl-pp',
        required=True,
        help='The location of the IDL preprocessor')
    args = parser.parse_args(argv)

    generator_args = read_generator_arguments(args.generator_arguments_file)

    rc = generate_cpp(args.generator_arguments_file)
    if rc:
        return rc
    return generate_dds_connext_cpp(
        generator_args['package_name'],
        generator_args.get('additional_files', []),
        args.dds_interface_base_path,
        generator_args.get('ros_interface_dependencies', []),
        generator_args['output_dir'],
        args.idl_pp
    )


if __name__ == '__main__':
    sys.exit(main())
