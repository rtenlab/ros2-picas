stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: osrf/ros:dashing-desktop
  script:
    - apt-get update
    - rosdep update
    - rosdep install --from apex_test_tools --ignore-src -y
    - mkdir -p /opt/apex_test_tools
    - '
      colcon build
          --install-base /opt/apex_test_tools
          --merge-install
          --cmake-args
            -DCMAKE_BUILD_TYPE=Release
          --base-path apex_test_tools
      '
    - cp LICENSE /opt/apex_test_tools
    - tar cfz opt.tar.gz /opt/apex_test_tools
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - log
      - build
      - opt.tar.gz

test:
  stage: test
  image: osrf/ros:dashing-desktop
  dependencies:
    - build
  script:
    - tar xf opt.tar.gz -C /
    - '
      colcon test
          --install-base /opt/apex_test_tools
          --merge-install
          --base-path apex_test_tools
      '
    - 'colcon test-result --verbose'
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - log

volume:
  stage: deploy
  image: docker
  services:
    - docker:dind
  dependencies:
    - build
  before_script:
    - ''
  script:
    - 'echo -e "*\n!opt.tar.gz" > .dockerignore'
    - |
      cat >Dockerfile <<EOF
      FROM alpine
      ADD opt.tar.gz /
      VOLUME /opt/apex_test_tools
      CMD ["/bin/sh", "-c", "trap 'exit 147' TERM; tail -f /dev/null & wait ${!}"]
      EOF
    - '
      docker build
          --label ade_image_commit_sha="$CI_COMMIT_SHA"
          --label ade_image_commit_tag="$CI_COMMIT_TAG"
          -t image .
      '
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker tag image $CI_REGISTRY_IMAGE:commit-$CI_COMMIT_SHA
    - docker tag image $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $CI_REGISTRY_IMAGE:commit-$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
